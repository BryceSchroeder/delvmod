/*globalprint.rdasm - Example of a RDASM program. Paste it into resource
                      0x3039 and use the shovel on a non-diggable object
                      to examine a global variable. 

 This is the very first "real" RDASM program (i.e. not a program made 
 for the nonce to test the assembler.)

 Copyright 2016 Bryce Schroeder, www.bryce.pw, bryce.schroeder@gmail.com
 Wiki: http://www.ferazelhosting.net/wiki/delv
 
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
include Delver.Main   // The system calls and globals are defined here.
resource 0x3039       // Change this if you paste it in somewhere else.
define globalToLookAt (Globals.CurrentZone)

function Dug(self) (
    'The value of the global '
    print
        byte globalToLookAt
    end
    ' is '
    print
        global globalToLookAt
    end
    '!\n'
    return
        byte 0
    end
)
